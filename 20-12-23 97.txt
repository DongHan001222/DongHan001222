1."그만"이 입력될 때까지 나라 이름과 인구를 입력받아 저장하고, 다시 나라 이름을 입력받아 인구를 출력하는 프로그램을 작성하라. 다음 해시맵을 이용하라.

나라 이름과 인구를 입력하세요.(예: Korea 5000)

나라 이름, 인구 >> Korea 5000

나라 이름, 인구 >> USA 1000000

나라 이름, 인구 >> Swiss 2000

나라 이름, 인구 >> France 3000

나라 이름, 인구 >> 그만오후 4:21 2020-12-23

인구 검색 >> France

France의 인구는 3000

인구 검색 >> 스위스

스위스 나라는 없습니다.

인구 검색 >> 그만

package Jokbo;

import java.util.HashMap;
import java.util.Scanner;

public class CountryPerson {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		HashMap<String, Integer> nations = new HashMap<String,Integer>();
		Scanner sc = new Scanner(System.in);
		
		System.out.println("나라 이름과 인구를 입력하세요.");
		while(true) {
			System.out.print("나라 이름,인구 >>");
			String nation = sc.next();
			if(nation.endsWith("그만"))
				break;
			int population = sc.nextInt();
			nations.put(nation, population);
		}
		while(true) {
			System.out.print("인구 검색 >>");
			String nation = sc.next();
			if(nation.equals("그만"))
				break;
			Integer n = nations.get(nation);
			if(n == null)
				System.out.println(nation + "나라는 없습니다.");
			else
				System.out.println(nation + "의 인구는" + n);
			
		}
		sc.close();
	}

}


2.하나의 학생 정보를 나타내는 Student 클래스에는 이름, 학과, 학번, 학점 평균을 저장하는 필드가 있다.

(1) 학생마다 Student 객체를 생성하고 4명의 학생 정보를 ArrayList<Student> 컬렉션에 저장한 후에, ArrayList<Student>의 모든 학생(4명) 정보를 출력하고 학생 이름을 입력받아 해당 학생의 학점 평균을 출력하는 프로그램을 작성하라.

학생 이름, 학과, 학번, 학점평균 입력하세요.

>> 황기태, 모바일, 1, 4.1

>> 이재문, 안드로이드, 2, 3.9

>> 김남윤, 웹공학, 3, 3.5

>> 최찬미, 빅데이터, 4, 4.25

----------------------------------

이름: 황기태

학과: 모바일

학번: 1

학점평균: 4.1

----------------------------------

이름: 이재문

학과: 안드로이드

학번: 2

학점평균: 3.9

----------------------------------

이름: 김남윤

학과: 웹공학

학번: 3

학점평균: 3.5

----------------------------------

이름: 최찬미

학과: 빅데이터

학번: 4

학점평균: 4.25

----------------------------------

학생 이름 >> 최찬미

최찬미, 빅데이터, 4, 4.25

학생 이름 >> 이재문

이재문, 안드로이드, 2, 3.9

학생 이름 >> 그만

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;
import java.util.StringTokenizer;

class Student{
   private String name, major, sNumber;
   private double grade;
      
   public Student(String name, String major, String sNumber, double grade) {
      this.name = name;
      this.major = major;
      this.sNumber = sNumber;
      this.grade = grade;
   }
   
   public String getName() {
      return name;
   }
   public void setName(String name) {
      this.name = name;
   }
   public String getMajor() {
      return major;
   }
   public void setMajor(String major) {
      this.major = major;
   }
   public String getsNumber() {
      return sNumber;
   }
   public void setsNumber(String sNumber) {
      this.sNumber = sNumber;
   }
   public double getGrade() {
      return grade;
   }
   public void setGrade(double grade) {
      this.grade = grade;
   }   
}


public class StudentMain {
      final static int STUDENT_NUM = 4;
      
   public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      try {
         ArrayList<Student> stuList = new ArrayList<Student>();
         System.out.println("학생 이름, 학과, 학번, 학점 평균을 입력하세요.");
         
         for(int i=0; i< STUDENT_NUM; i++) {
            System.out.print(">> ");
            String text = sc.nextLine();
            
            StringTokenizer st = new StringTokenizer(text, ",");
            String name = st.nextToken().trim();
            String major = st.nextToken().trim();
            String sNumber = st.nextToken().trim();
            double grade = Double.parseDouble(st.nextToken().trim());
            
            Student student = new Student(name, major, sNumber, grade);
            stuList.add(student);
         }
         
         Iterator<Student> it = stuList.iterator();
         while (it.hasNext()) {
            Student student = it.next();
            System.out.println("---------------------------");
            System.out.println("이름:" + student.getName());
            System.out.println("학과:" + student.getMajor());
            System.out.println("학번:" + student.getsNumber());
            System.out.println("학점평균:" + student.getGrade());
            System.out.println("---------------------------");
         }
         
         while(true) {
            System.out.print("학생 이름 >> ");
            String name = sc.nextLine();
            
            if (name.equals("그만"))
               break;
            
            for(int i=0; i < stuList.size(); i++) {
               Student student = stuList.get(i);
               
               if(student.getName().trim().equals(name.trim())) {
                  System.out.print(student.getName() + ", ");
                  System.out.print(student.getMajor() + ", ");
                  System.out.print(student.getsNumber() + ", ");
                  System.out.println(student.getGrade());
                  break;
               }            
            }   
            
         }
         
      } catch (Exception e) {
         e.printStackTrace();
         System.out.println("프로그램이 에러 입니다.");
      }
         
      System.out.println("프로그램이 종료 되었습니다.");      
      sc.close();
   }

}

3.ArrayList<Student> 대신, HashMap<String, Studnet> 해시맵을 이용하여 다시 작성하라. 해시맵에서 키는 학생 이름으로 한다.

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Scanner;
import java.util.Set;
import java.util.StringTokenizer;

class Student{
   private String name, major, sNumber;
   private double grade;
      
   public Student(String name, String major, String sNumber, double grade) {
      this.name = name;
      this.major = major;
      this.sNumber = sNumber;
      this.grade = grade;
   }
   
   public String getName() {
      return name;
   }
   public void setName(String name) {
      this.name = name;
   }
   public String getMajor() {
      return major;
   }
   public void setMajor(String major) {
      this.major = major;
   }
   public String getsNumber() {
      return sNumber;
   }
   public void setsNumber(String sNumber) {
      this.sNumber = sNumber;
   }
   public double getGrade() {
      return grade;
   }
   public void setGrade(double grade) {
      this.grade = grade;
   }   
}


public class StudentMain {
      final static int STUDENT_NUM = 4;
      
   public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      try {
         HashMap<String,Student> stuList = new HashMap<>();
         
         System.out.println("학생 이름, 학과, 학번, 학점 평균을 입력하세요.");
         
         for(int i=0; i< STUDENT_NUM; i++) {
            System.out.print(">> ");
            String text = sc.nextLine();
            
            StringTokenizer st = new StringTokenizer(text, ",");
            String name = st.nextToken().trim();
            String major = st.nextToken().trim();
            String sNumber = st.nextToken().trim();
            double grade = Double.parseDouble(st.nextToken().trim());
            
            Student student = new Student(name, major, sNumber, grade);
            stuList.put(sNumber,student);
         }
         
         Set<String> key = stuList.keySet(); // 해시맵 info에 있는 모든 키 Set 컬렉션으로 리턴
         Iterator<String> it = key.iterator(); // Set을 순차검색하는 이터레이터 리턴
         while (it.hasNext()) {
            String sNum = it.next();
            Student student = stuList.get(sNum); // 이름을 키로 하여 객체를 얻는다.
            System.out.println("---------------------------");
            System.out.println("이름:" + student.getName());
            System.out.println("학과:" + student.getMajor());
            System.out.println("학번:" + student.getsNumber());
            System.out.println("학점평균:" + student.getGrade());
            System.out.println("---------------------------");
         }
         
         while(true) {
            System.out.print("학생 번호>> ");
            String name = sc.nextLine();
            
            if (name.equals("그만"))
               break;
            Student student = stuList.get(name); // 해시맵에서 이름을 키로 검색
            
            if (student == null) { // 이름이 해시맵에 없다면
               System.out.println(name + " 학생 없습니다.");
            } else { // 해시맵에서 검색된 Student 객체
               System.out.print(student.getName() + ", ");
               System.out.print(student.getMajor() + ", ");
               System.out.print(student.getsNumber() + ", ");
               System.out.println(student.getGrade());
            }   
            
         }
         
      } catch (Exception e) {
         e.printStackTrace();
         System.out.println("프로그램이 에러 입니다.");
      }
         
      System.out.println("프로그램이 종료 되었습니다.");      
      sc.close();
   }

}

4.도시 이름, 위도, 경도 정보를 가진 Location 클래스를 작성하고, 도시 이름을 '키'로 하는 HashMap<String, Location> 컬렉션을 만들고, 사용자로부터 입력 받아 4개의 도시를 저장하라. 그리고 도시 이름으로 검색하는 프로그램을 작성하라.

도시, 경도, 위도를 입력하세요.

>> 서울, 37, 126

>> LA, 34, -118

>> 파리, 2, 48

>> 시드니, 151, -33

----------------------------------

서울 37 126

LA 34 -118

파리 2 48

시드니 151 -33

----------------------------------

도시 이름 >> 피리

피리는 없습니다.

도시 이름 >> 파리

파리 2 48

도시 이름 >> 그만

5.이름과 학점(4.5만점)을 5개 입력받아 해시맵에 저장하고, 장학생 선발 기준을 입력 받아 장학생 명단을 출력하라.

미래장학금관리시스템입니다.

이름과 학점 >> 적당히 3.1

이름과 학점 >> 나탈락 2.4

이름과 학점 >> 최고조 4.3

이름과 학점 >> 상당히 3.9

이름과 학점 >> 고득점 4.0

장학생 선발 학점 기준 입력 >> 3.2

장학생 명단 : 최고조 상당히 고득점 

[Hint] HashMap의 전체 요소를 검색하여 학점이 3.2 이상인 학생을 알아내야 한다.

6.큐와 스택에 대하여 설명하시오.(필수)
스택
 - LIFO 구조, 마지막에 저장된 것을 제일 먼저 꺼냅니다.

큐
 - FIFO 주고, 제일 먼저 저장한 것을 제일 먼저 꺼냅니다.

7.Map 에 대하여 설명하시오.

8.아래의 TreeMap의 Value를 확인 하기 위한 소스를 짜시오.(필수)
   TreeMap<Integer, String> map = new TreeMap<>();
   map.put(45, "Brown");
   map.put(37, "James");
   map.put(23, "Martin");
Value만 출력

Set<Integer> ks = map.keySet();

		System.out.println("23번: " + map.get(23));
		System.out.println("37번: " + map.get(37));
		System.out.println("45번: " + map.get(45));

9. 아래의 IntegerComparator를 내림차순 정렬이 되게끔 구현하시오.
class ComparatorIntegerDemo {
    public static void main(String[] args) {
        TreeSet<Integer> tr = new TreeSet<>(new IntegerComparator());
        tr.add(30);
        tr.add(10);    
        tr.add(20);        
        System.out.println(tr);	
    }
}

package Jokbo;

import java.util.Comparator;
import java.util.TreeSet;

class IntegerComparator implements Comparator<Integer> {

	@Override
	public int compare(Integer n1, Integer n2) {
		
		return n2.intValue() - n1.intValue();
	}
	
}

public class ComparatorIntegerDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TreeSet<Integer> tr = new TreeSet<>(new IntegerComparator());
		tr.add(30);
		tr.add(10);
		tr.add(20);
		System.out.print(tr);
	}


	}



10.Objects.hash의 용도와 사용법은?