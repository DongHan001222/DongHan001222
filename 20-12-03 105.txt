1.set classpath 에 대하여 설명하시오.
set : Set은 List와는 다르게 객체(데이터)를 중복해서 저장할 수 없다. 또한 저장된 객체(데이터)를 인덱스로 관리하지 않기 때문에 저장 순서가 보장되지 않는다

클래스패스 : 자바 가상머신의 클래스 탐색경로

2.절대경로와 상대경로에 대하여 설명하시오.
절대경로 : 루트디렉트를 시작으로 지정한 절대경로

상대경로 : 현대 디렉토리를 기준으로 지정한 상대경로

3. . 과 .. 의 차이는?

4.package의 용도는?
패키지에는 클래스나 인터페이스를 포함시킬 수 있으며, 서로 관련된 클래스들끼리 묶어 놓음으로써 클래스를 효율적으로 관리할 수 있다. 같은이름의 클래스일지라도 서로 다른패키지에 존재하는것이 가능하다. 그래서 같은 이름의 클래스가 존재한다면 패키지명으로 구분한다.
5.package 의 기본적인 명명법(이름짓는법)은?

6.정보은닉에 대하여 설명하시오.
 모든 객체지향 언어적 요소를 활용하여 객체에 대한 구체적인 정보를 노출시키지 않도록 하는 기법.


7.접근제한자 4가지 종류에 대하여 설명하시오.
public : 모든 접근을 허용
protected : 같은 패키지에 있는객체와 상속관계의 객체들만 허용
default : 같은 패키지에 있는 객체들만 허용
private : 현재 객체 내에서만 허용

9.class 에서 붙일수 있는 접근 제한자 2개를 설명하고, 해당 접근제한자의 사용 목적은?
public
default

10.가위, 바위, 보 게임 작성하시오.

public class Player {
	public int Number;
	public String Name;
	public Player(int Input) {
		this.Number = Input;
	}
	class Rock extends Player{
		public Rock(int Input) {
			super(1);
			this.Name = "Rock";
		}
		class Scissors extends Player{
			public Scissors(int Input) {
				super(2);
				this.Name = "Scissors";
			}
			class Paper extends Player{
				public Paper(int Input) {
					super(3);
					this.Name = "Paper";
				}
			}
		}




import java.util.Scanner;

public class RSP {

	public static void main(String[]args) {
		
		System.out.println("가위 바위 보 게임");
		System.out.println("1.바위");
		System.out.println("2.가위");
		System.out.println("3.보");
		System.out.println("무엇을 낼 지 입력 : ");
		Scanner scanner = new Scanner(System.in);
		int Input = In.nextInt();
		
		Player Player = new Player(Input);
		if(Input == 1) {
			Player = new Rock(1);
		}else if(Input == 2) {
			Player = new Scissors(2);
		}else {
			Player = new Paper(3);
		}
		
		
		Player Computer = new Player((int)(Math.random()*3) + 1);
		if(Computer.Number == 1) {
			Computer = new Rock(1);
		}else if(Computer.Number == 2) {
			Computer = new Scissors(2);
		}else {
			Computer = newPapar(3);
		}
		
		System.out.println("플레이어 : " + Player.Name);
		System.out.println("컴퓨터 : " + Computer.Name);
		
		if(Player.Number == Computer.Number) {
			System.out.println("비겼습니다");
		}else if(((Player.Number==1)&&(Computer.Number==2))) || ((Player.Number==2)&&		(Computer.Number==3))
		||(((Player.Number==3)&&(Computer.Number==1)));
		System.out.println("이겼습니다");
		}else {		
			System.out.println("졌습니다");
		}		
	}
	
	
}








11.아래와 같이 계산기 프로그램을 작성하시오.
==================================
10 + 9   // 입력을 한칸씩 띄우도록 할것
10 + 9 = 19
계속하시겠습니까?
10 - 7
10 - 7 = 3
계속하시겠습니까?


