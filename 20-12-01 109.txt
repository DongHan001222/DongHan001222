1.아래가 의도하지 않은 결과를 나타내는 이유를 설명하시오.
char ch = '가';
System.out.println(ch + '\n')

 ''를 사용함으로써 아스키코드로 인식됬다.
==========================================================================================================
2.변수의 scope 는?
public class practice {

	public static void main(String[] args) {
		
		
		
	}

}
처음에 { 부터 마지막 } 까지가 변수의 scope이다
==========================================================================================================
3.지역변수?
public class practice {
        int a; <- 이처럼 함수 밖에 있는 것을 지역변수라 한다.
	public static void main(String[] args) {
==========================================================================================================
4.펙토리얼을 구하는 재귀 함수를 만드시오.

def factorial(n):
    if n == 1:
        return 1 
    return n * factorial(n-1)

print(factorial(5))
==========================================================================================================
5.클래스의 구성요소는 무엇인가?
 
데이터: 프로그램상에서 유지하고 관리해야할 데이터
기능: 데이터를 처리하고 조작하는 기능
==========================================================================================================
6.원의 넓이는 구하는 프로그램을 아래와 같이 작성하시오.
-원클래스를 만들것
-메인 메소드를 가진 다른 클래스에서 원 객체를 생성할것
package java_rec;

public class circle {
	final double PI = 3.14;
	double radius;

	public double getRadius() {
		return radius;
	}

	public void setRadius(double radius) {
		this.radius = radius;
	}
	
	public double getArea() {
		return radius = radius * radius * PI;
	}
}

--------------------------------------------------------------------------------------------------------

package java_rec;

public class circle1 {

	public static void main(String[] args) {
		circle circle = new circle();
		circle.setRadius(10);
		
		double area = circle.getArea();
		
		System.out.println("넓이는 : " + area);

	}

}
==========================================================================================================
7.객체란 무엇인가?
객체(Object)란 물리적으로 존재하거나 추상적으로 생각할 수 있는 것 중에서 자신의 속성을 가지고 있고 다른것과 식별 가능한 것을 말합니다.

객체는 속성과 동작으로 구성되어 있다고 보면 되는데 자바에서는 이 속성과 동작을 각각 필드(field) 와 메소드(method) 라 부릅니다.

==========================================================================================================
8. 아래의 클래스에 대하여, 메모리 그림을 그리시오.
Rectangle rec = new Rectangle();
 
public class Rectangle {
	int height;
	int width;
	
	public int getHeight() {
		return height;
	}
	
	public void setHeight(int height) {
		this.height = height;
	}
	
	public int getWidth() {
		return width;
	}
	
	public void setWidth(int width) {
		this.width = width;
	}
	
	public int getArea() {
		return width * height;
	}
	
}
모르겠습니다.

==========================================================================================================
9.클래스와 객체의 차이는 무엇인가?
클래스는 '설계도', 객체는 '설계도로 구현한 모든 대상'을 의미한다
==========================================================================================================
10.아래의 프로그램을 작성하시오.
-1 부터 num 까지 합을 구하는 class 를 작성하도록 하시오.
모르겠습니다.
==========================================================================================================
11.아래의 클래스를 작성하시오.
StraPrint strPrint = new StarPrint();

strPrint.printTriangle(3); 
System.out.println();
strPrint.printReverseTriangle(3); 
===============================
*
**
***

***
**
*

public class StraPrint
==========================================================================================================
12.아래의 프로그래밍을 작성하시오.

Gugudan gugudan = new Gugudan();
gugudan.printGugu(10);  //1단부터 10단까지 출력
gugudan.printGugu(20);  //1단부터 20단까지 출력


public void makeGugudan(int dan){
		for(int i=1; i<=9; i++){
			System.out.println(dan+"단 : "+dan+" X "+i+" = "+(dan*i));
		}
	}

----------------------------------------------------------------------------------------------------------

public static void main(String[] args) {
		// TODO Auto-generated method stub
		Gugudan gu = new Gugudan();
		gu.makeGugudan(10); 
		gu.makeGugudan(20); 
		
	}

}




==========================================================================================================
13. 아래의 BankAccount 객체에 대하여 그림을 그리시오.
   BankAccount ref1 = new BankAccount();
   BankAccount ref2 = ref1;


모르겠습니다.
 
