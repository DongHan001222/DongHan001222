1.String 클래스에서 concat 메서드를 설명하시오.
String 이 String과 str을 접합하여 구성되는 새로운 String을 반환한다.

2.str.substring(2, 4); substring 사용법에 대하여 설명하시오.
String의 offset 위치에서부터 endIndex-1까지에 걸친 문자열을 반환한다

3.st1.compareTo(st2);compareTo 사용법에 대하여 설명하시오.
String이 String str보다 사전적 순서에서 앞서면 음수 값, 같으면 0, 뒤에 있으면 양의 정수 값을 반환한다. 

4.String.valueOf 에 대하여 설명하시오.

5. 아래의 연산과정에서 호출되는 함수(원리)를 써서 표현해 보세요.
String str = "age: " + 17;
		String str1 = new String("age:");
		String str2 = new String("17");
		String str3 = new String();
		str3 = str1.concat(str2);
		System.out.println(str3);
6.StringBuilder 와 String 의 차이는?
String은 immutable(불변), StringBuilderr는 mutable(변함)에 있습니다.
.
7.String 을 이용하여 프로그래밍 하시오.
입력 : 990925-1012999
출력 : 990925 1012999

public static void main(String[] args) {
        StringBuilder sb = new StringBuilder("990925-1012999");
        sb.replace(6, 7, " ");
        System.out.println(sb.toString());
    }

8.아래의 메모리 그림을 그리시오.
int[] ar1 = new int[5];

              array    20byte   
   	 ----------------
      	 |  |  |  |  |  |
      	 |  |  |  |  |  |
      	 |  |  |  |  |  |
      	 |  |  |  |  |  |	
         ----------------
        ar1|ar2|ar3|ar4|ar5
9.아래를 프로그래밍 하시오.(단 클래스로 구성할것)
입력:lee sunkyo
출력:first name: lee second name:sunkyo
String name = "lee sunkyo";
        
        
        if (name.contains("sun")) {
            name = name.replace("sun", "soon");
            System.out.println(name);
        }else {
            System.out.println("sun 이라는 문자열은 없습니다.");
        }
        
        
        String firstName = "";
        String lastName = "";
        
        firstName = name.substring(0, 3); 
        lastName = name.substring(4);     
        
        System.out.println("성: " + firstName);
        System.out.println("이름: " + lastName);
    }


}
10.아래를 프로그래밍 하시오.

입력 : 홍 길동 
출력 : 성 = 홍  이름 = 길동 

입력 : 홍길동 
출력 : 공백이 없군요. 다시 입력해주세요.
import javax.swing.JOptionPane;
 
public class StringTest05 {
    public static void main(String[] args) {
        
        String msg = "성과 이름을 공백으로 분리하여 입력해주세요.";
        
        String firstName = "";
        String lastName = "";
        
        while(true) {
            String name = JOptionPane.showInputDialog(msg);
            
            
           
            name = name.trim();
            
            if(name.contains(" ")) {
                int idx = name.indexOf(" ");
                
                firstName = name.substring(0, idx);
                lastName = name.substring(idx + 1);
                break;
            }else {
                msg = "공백이 없습니다. 다시 입력해주세요.";
            }
        }
        
        JOptionPane.showMessageDialog(null, "성: " + firstName + "\n이름: " + lastName);
    
    }
}



11.아래를 프로그래밍 하시오.
"Hello.java" 문자열에서 파일명과 확장자인 java를 분리시키는 프로그램을 짜시오.

입력: Hello.java
출력: 파일이름은:Hello 이며 확장자는 java 입니다.

입력: Java.avi 
출력: 파일이름은:Java 이며 확장자는 avi 입니다.

public static void main(String[] args) {
 
        String fullName = "Hello.java";
        
        int idx = fullName.indexOf(".");
        
        String fileName = fullName.substring(0, idx);
        String extName = fullName.substring(idx + 1);
        
        System.out.println("파일명: " + fileName);
        System.out.println("확장자: " + extName);
    }
}



문제12. Scanner 클래스를 이용해서 한 줄 읽고, 공백으로 분리된 "단어"가 몇 개 들어 있는지 확인해보자.

   "그만"을 입력할 때까지 반복하는 프로그램이다.

   예) 입력 : Java Programming > 출력 : 단어의 개수는 2

	                입력 : 자바 수업은 2층 C클래스 > 출력 : 단어의 개수는 4

	                입력 : 그만 > 출력 : 프로그램 종료

 Scanner sc = new Scanner(System.in);
         System.out.println(">> 단어 개수 확인하기 <<");
         
         while(true) {
             System.out.print("입력: ");
             String str = sc.nextLine();
             
             if (str.equals("stop")) {
                 System.out.println("프로그램 종료");
                 break;
             }
             
             String[] arStr = str.split(" ");
             System.out.println("단어의 개수: " + arStr.length);
         }
         

